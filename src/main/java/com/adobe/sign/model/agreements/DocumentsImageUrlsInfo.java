/**
*  Copyright 2019 Adobe Systems Incorporated. All rights reserved.
*  This file is licensed to you under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License. You may obtain a copy
*  of the License at http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software distributed under
*  the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
*  OF ANY KIND, either express or implied. See the License for the specific language
*  governing permissions and limitations under the License.
*
*
**/


/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.adobe.sign.model.agreements;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * DocumentsImageUrlsInfo
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-03-11T15:48:52.659+05:30")
public class DocumentsImageUrlsInfo {
  @SerializedName("originalDocumentsImageUrlsInfo")
  private List<DocumentImageUrlsInfo> originalDocumentsImageUrlsInfo = null;

  @SerializedName("supportingDocumentsImageUrlsInfo")
  private List<DocumentImageUrlsInfo> supportingDocumentsImageUrlsInfo = null;

  public DocumentsImageUrlsInfo originalDocumentsImageUrlsInfo(List<DocumentImageUrlsInfo> originalDocumentsImageUrlsInfo) {
    this.originalDocumentsImageUrlsInfo = originalDocumentsImageUrlsInfo;
    return this;
  }

  public DocumentsImageUrlsInfo addOriginalDocumentsImageUrlsInfoItem(DocumentImageUrlsInfo originalDocumentsImageUrlsInfoItem) {
    if (this.originalDocumentsImageUrlsInfo == null) {
      this.originalDocumentsImageUrlsInfo = new ArrayList<DocumentImageUrlsInfo>();
    }
    this.originalDocumentsImageUrlsInfo.add(originalDocumentsImageUrlsInfoItem);
    return this;
  }

   /**
   * A list of original document image URLs info.
   * @return originalDocumentsImageUrlsInfo
  **/
  @ApiModelProperty(value = "A list of original document image URLs info.")
  public List<DocumentImageUrlsInfo> getOriginalDocumentsImageUrlsInfo() {
    return originalDocumentsImageUrlsInfo;
  }

  public void setOriginalDocumentsImageUrlsInfo(List<DocumentImageUrlsInfo> originalDocumentsImageUrlsInfo) {
    this.originalDocumentsImageUrlsInfo = originalDocumentsImageUrlsInfo;
  }

  public DocumentsImageUrlsInfo supportingDocumentsImageUrlsInfo(List<DocumentImageUrlsInfo> supportingDocumentsImageUrlsInfo) {
    this.supportingDocumentsImageUrlsInfo = supportingDocumentsImageUrlsInfo;
    return this;
  }

  public DocumentsImageUrlsInfo addSupportingDocumentsImageUrlsInfoItem(DocumentImageUrlsInfo supportingDocumentsImageUrlsInfoItem) {
    if (this.supportingDocumentsImageUrlsInfo == null) {
      this.supportingDocumentsImageUrlsInfo = new ArrayList<DocumentImageUrlsInfo>();
    }
    this.supportingDocumentsImageUrlsInfo.add(supportingDocumentsImageUrlsInfoItem);
    return this;
  }

   /**
   * A list of supporting document image URLs info.
   * @return supportingDocumentsImageUrlsInfo
  **/
  @ApiModelProperty(value = "A list of supporting document image URLs info.")
  public List<DocumentImageUrlsInfo> getSupportingDocumentsImageUrlsInfo() {
    return supportingDocumentsImageUrlsInfo;
  }

  public void setSupportingDocumentsImageUrlsInfo(List<DocumentImageUrlsInfo> supportingDocumentsImageUrlsInfo) {
    this.supportingDocumentsImageUrlsInfo = supportingDocumentsImageUrlsInfo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocumentsImageUrlsInfo documentsImageUrlsInfo = (DocumentsImageUrlsInfo) o;
    return Objects.equals(this.originalDocumentsImageUrlsInfo, documentsImageUrlsInfo.originalDocumentsImageUrlsInfo) &&
        Objects.equals(this.supportingDocumentsImageUrlsInfo, documentsImageUrlsInfo.supportingDocumentsImageUrlsInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(originalDocumentsImageUrlsInfo, supportingDocumentsImageUrlsInfo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocumentsImageUrlsInfo {\n");
    
    sb.append("    originalDocumentsImageUrlsInfo: ").append(toIndentedString(originalDocumentsImageUrlsInfo)).append("\n");
    sb.append("    supportingDocumentsImageUrlsInfo: ").append(toIndentedString(supportingDocumentsImageUrlsInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

