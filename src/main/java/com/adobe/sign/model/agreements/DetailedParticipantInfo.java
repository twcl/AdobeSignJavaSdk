/**
*  Copyright 2019 Adobe Systems Incorporated. All rights reserved.
*  This file is licensed to you under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License. You may obtain a copy
*  of the License at http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software distributed under
*  the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
*  OF ANY KIND, either express or implied. See the License for the specific language
*  governing permissions and limitations under the License.
*
*
**/


/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.adobe.sign.model.agreements;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * DetailedParticipantInfo
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-03-11T15:48:52.659+05:30")
public class DetailedParticipantInfo {
  @SerializedName("company")
  private String company = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("fax")
  private String fax = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("privateMessage")
  private String privateMessage = null;

  @SerializedName("securityOption")
  private ParticipantSecurityOption securityOption = null;

  @SerializedName("self")
  private Boolean self = null;

  /**
   * The status of the participant. This cannot be changed as part of the PUT call. New participants will be ignored if added with a REPLACED status.
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    REPLACED("REPLACED"),
    
    ACTIVE("ACTIVE");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  public DetailedParticipantInfo company(String company) {
    this.company = company;
    return this;
  }

   /**
   * The company of the participant, if available. This cannot be changed as part of the PUT call.
   * @return company
  **/
  @ApiModelProperty(value = "The company of the participant, if available. This cannot be changed as part of the PUT call.")
  public String getCompany() {
    return company;
  }

  public void setCompany(String company) {
    this.company = company;
  }

  public DetailedParticipantInfo email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Email of the participant. In case of modifying a participant set (PUT) this is a required field. In case of GET, this is the required field and will always be returned unless it is a fax workflow (legacy agreements) that were created using fax as input
   * @return email
  **/
  @ApiModelProperty(value = "Email of the participant. In case of modifying a participant set (PUT) this is a required field. In case of GET, this is the required field and will always be returned unless it is a fax workflow (legacy agreements) that were created using fax as input")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public DetailedParticipantInfo fax(String fax) {
    this.fax = fax;
    return this;
  }

   /**
   * Fax of the participant. New Agreements can not be created with fax option. This is only returned for legacy agreements created with fax as participants
   * @return fax
  **/
  @ApiModelProperty(value = "Fax of the participant. New Agreements can not be created with fax option. This is only returned for legacy agreements created with fax as participants")
  public String getFax() {
    return fax;
  }

  public void setFax(String fax) {
    this.fax = fax;
  }

  public DetailedParticipantInfo id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The unique identifier of the participant. This will be returned as part of Get call but is not mandatory to be passed as part of PUT call for agreements/{id}/members/participantSets/{id}.
   * @return id
  **/
  @ApiModelProperty(value = "The unique identifier of the participant. This will be returned as part of Get call but is not mandatory to be passed as part of PUT call for agreements/{id}/members/participantSets/{id}.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public DetailedParticipantInfo name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the participant, if available. This cannot be changed as part of the PUT call.
   * @return name
  **/
  @ApiModelProperty(value = "The name of the participant, if available. This cannot be changed as part of the PUT call.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DetailedParticipantInfo privateMessage(String privateMessage) {
    this.privateMessage = privateMessage;
    return this;
  }

   /**
   * The private message of the participant, if available. This cannot be changed as part of the PUT call.
   * @return privateMessage
  **/
  @ApiModelProperty(value = "The private message of the participant, if available. This cannot be changed as part of the PUT call.")
  public String getPrivateMessage() {
    return privateMessage;
  }

  public void setPrivateMessage(String privateMessage) {
    this.privateMessage = privateMessage;
  }

  public DetailedParticipantInfo securityOption(ParticipantSecurityOption securityOption) {
    this.securityOption = securityOption;
    return this;
  }

   /**
   * Security options that apply to the participant.
   * @return securityOption
  **/
  @ApiModelProperty(value = "Security options that apply to the participant.")
  public ParticipantSecurityOption getSecurityOption() {
    return securityOption;
  }

  public void setSecurityOption(ParticipantSecurityOption securityOption) {
    this.securityOption = securityOption;
  }

  public DetailedParticipantInfo self(Boolean self) {
    this.self = self;
    return this;
  }

   /**
   * True if this participant is the same user that is calling the API. Returned as part of Get. Ignored (not required) if modifying a participant set (PUT).
   * @return self
  **/
  @ApiModelProperty(value = "True if this participant is the same user that is calling the API. Returned as part of Get. Ignored (not required) if modifying a participant set (PUT).")
  public Boolean isSelf() {
    return self;
  }

  public void setSelf(Boolean self) {
    this.self = self;
  }

  public DetailedParticipantInfo status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * The status of the participant. This cannot be changed as part of the PUT call. New participants will be ignored if added with a REPLACED status.
   * @return status
  **/
  @ApiModelProperty(value = "The status of the participant. This cannot be changed as part of the PUT call. New participants will be ignored if added with a REPLACED status.")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DetailedParticipantInfo detailedParticipantInfo = (DetailedParticipantInfo) o;
    return Objects.equals(this.company, detailedParticipantInfo.company) &&
        Objects.equals(this.email, detailedParticipantInfo.email) &&
        Objects.equals(this.fax, detailedParticipantInfo.fax) &&
        Objects.equals(this.id, detailedParticipantInfo.id) &&
        Objects.equals(this.name, detailedParticipantInfo.name) &&
        Objects.equals(this.privateMessage, detailedParticipantInfo.privateMessage) &&
        Objects.equals(this.securityOption, detailedParticipantInfo.securityOption) &&
        Objects.equals(this.self, detailedParticipantInfo.self) &&
        Objects.equals(this.status, detailedParticipantInfo.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(company, email, fax, id, name, privateMessage, securityOption, self, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DetailedParticipantInfo {\n");
    
    sb.append("    company: ").append(toIndentedString(company)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    fax: ").append(toIndentedString(fax)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    privateMessage: ").append(toIndentedString(privateMessage)).append("\n");
    sb.append("    securityOption: ").append(toIndentedString(securityOption)).append("\n");
    sb.append("    self: ").append(toIndentedString(self)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

