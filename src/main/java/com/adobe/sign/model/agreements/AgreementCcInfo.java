/**
*  Copyright 2019 Adobe Systems Incorporated. All rights reserved.
*  This file is licensed to you under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License. You may obtain a copy
*  of the License at http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software distributed under
*  the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
*  OF ANY KIND, either express or implied. See the License for the specific language
*  governing permissions and limitations under the License.
*
*
**/


/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.adobe.sign.model.agreements;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * AgreementCcInfo
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-03-11T15:48:52.659+05:30")
public class AgreementCcInfo {
  @SerializedName("email")
  private String email = null;

  @SerializedName("label")
  private String label = null;

  @SerializedName("visiblePages")
  private List<String> visiblePages = null;

  public AgreementCcInfo email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Email of the CC participant of the agreement
   * @return email
  **/
  @ApiModelProperty(value = "Email of the CC participant of the agreement")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public AgreementCcInfo label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Label of the CC list as returned in workflow description
   * @return label
  **/
  @ApiModelProperty(value = "Label of the CC list as returned in workflow description")
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }

  public AgreementCcInfo visiblePages(List<String> visiblePages) {
    this.visiblePages = visiblePages;
    return this;
  }

  public AgreementCcInfo addVisiblePagesItem(String visiblePagesItem) {
    if (this.visiblePages == null) {
      this.visiblePages = new ArrayList<String>();
    }
    this.visiblePages.add(visiblePagesItem);
    return this;
  }

   /**
   * When you enable limited document visibility (documentVisibilityEnabled), you can specify which file (fileInfo) should be made visible to which specific participant set.&lt;br&gt;Specify one or more label values of a fileInfos element.&lt;br&gt;Each signer participant sets must contain at least one required signature field in at least one visible file included in this API call; if not a page with a signature field is automatically appended for any missing participant sets. If there is a possibility that one or more participant sets do not have a required signature field in the files included in the API call, all signer participant sets should include a special index value of &#39;0&#39; to make this automatically appended signature page visible to the signer. Not doing so may result in an error. For all other roles, you may omit this value to exclude this page.
   * @return visiblePages
  **/
  @ApiModelProperty(value = "When you enable limited document visibility (documentVisibilityEnabled), you can specify which file (fileInfo) should be made visible to which specific participant set.<br>Specify one or more label values of a fileInfos element.<br>Each signer participant sets must contain at least one required signature field in at least one visible file included in this API call; if not a page with a signature field is automatically appended for any missing participant sets. If there is a possibility that one or more participant sets do not have a required signature field in the files included in the API call, all signer participant sets should include a special index value of '0' to make this automatically appended signature page visible to the signer. Not doing so may result in an error. For all other roles, you may omit this value to exclude this page.")
  public List<String> getVisiblePages() {
    return visiblePages;
  }

  public void setVisiblePages(List<String> visiblePages) {
    this.visiblePages = visiblePages;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AgreementCcInfo agreementCcInfo = (AgreementCcInfo) o;
    return Objects.equals(this.email, agreementCcInfo.email) &&
        Objects.equals(this.label, agreementCcInfo.label) &&
        Objects.equals(this.visiblePages, agreementCcInfo.visiblePages);
  }

  @Override
  public int hashCode() {
    return Objects.hash(email, label, visiblePages);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AgreementCcInfo {\n");
    
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    visiblePages: ").append(toIndentedString(visiblePages)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

